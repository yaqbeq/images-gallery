version: "3.7"
services:
  frontend:
    restart: always
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules # This volume maps the container's volume as an anonymous volume, preventing changes to the host's node_modules directory from being reflected in the container.
      - ./frontend:/app # This volume maps the host's ./frontend directory to the container's /app directory, allowing changes on the host to be reflected in the container.
    environment:
      - WATCHPACK_POLLING=true
    env_file:
      - ./frontend/.env.development
  api:
    restart: always
    build: ./api
    ports:
      - "5050:5050"
    volumes:
      - /app/.venv
      - ./api:/app
    env_file:
      - ./api/.env.development
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      # mapping internal docker volume for db data
      - mongodb_data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo # Will be started only after mongo is started

volumes:
  mongodb_data: # internal docker volume for db data
    driver: local
